type Team {
  name: String
  points: Int
}

type News {
  _id: ID!
  title: String!
  published: String
  content: String
  slug: String
  status: String!
}
input Article {
  title: String!
  content: String!
  slug: String!
  status: String!
}

type DiscordUser {
  id: ID
  name: String
  playing: String
  status: String
  avatar_url: String
  avatar_url_jpg: String
}

type Query {
  teams: [Team]
  news(limit: Int, publishedOnly: Boolean = true): [News]
  article(slug: String): News
  discord: [DiscordUser]
}

type User {
  _id: ID!
  admin: Boolean!
  discord_id: String!
  email: String!
  username: String!
  discriminator: String
}

type LoginToken {
  token: String
  user: User
}

type Mutation {
  login(code: String): LoginToken
  logout: Boolean
  updateArticle(id: ID, article: Article): News
  createArticle(article: Article): News
}
