type Team {
    name: String
    points: Int
}

type News {
    _id: ID!
    title: String!
    published: String
    content: String
    slug: String
    status: String!
}
input Article {
    title: String!
    content: String!
    slug: String!
    status: String!
}

type DiscordUser {
    id: ID
    name: String
    playing: String
    status: String
    avatar_url: String
    avatar_url_jpg: String
}

type Query {
    teams: [Team]
    news(limit: Int, publishedOnly: Boolean = true): [News]
    article(slug: String): News
    discord: [DiscordUser]
}

type User {
    id: ID
    role: String
}

type LoginToken {
    token: String
    user: User
}

type Mutation {
    login(email: String, password: String): LoginToken
    register(email: String, password: String, name: String): LoginToken
    updateArticle(id: ID, article: Article): News
    createArticle(article: Article): News
}